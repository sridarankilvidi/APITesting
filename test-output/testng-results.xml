<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="10" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="TestSuite" duration-ms="2849" started-at="2019-03-19T22:39:09Z" finished-at="2019-03-19T22:39:12Z">
    <groups>
    </groups>
    <test name="APIParallelTests" duration-ms="2849" started-at="2019-03-19T22:39:09Z" finished-at="2019-03-19T22:39:12Z">
      <class name="RestApi.APITest.Authentication">
        <test-method status="FAIL" signature="AuthenticationBasics()[pri:0, instance:RestApi.APITest.Authentication@5b275dab]" name="AuthenticationBasics" duration-ms="1239" started-at="2019-03-19T22:39:09Z" finished-at="2019-03-19T22:39:10Z">
          <exception class="io.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:986)
at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:951)
at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1031)
at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
at RestApi.APITest.Authentication.AuthenticationBasics(Authentication.java:46)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalArgumentException: The JSON input text should neither be null nor empty.
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:80)
at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:949)
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:984)
... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- io.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AuthenticationBasics -->
      </class> <!-- RestApi.APITest.Authentication -->
      <class name="RestApi.APITest.RegistrationSuccessResponse">
        <test-method status="PASS" signature="RegistrationSuccessful()[pri:0, instance:RestApi.APITest.RegistrationSuccessResponse@61832929]" name="RegistrationSuccessful" duration-ms="1361" started-at="2019-03-19T22:39:09Z" finished-at="2019-03-19T22:39:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegistrationSuccessful -->
      </class> <!-- RestApi.APITest.RegistrationSuccessResponse -->
      <class name="RestApi.APITest.PostTest">
        <test-method status="FAIL" signature="SimplePostTest()[pri:0, instance:RestApi.APITest.PostTest@523884b2]" name="SimplePostTest" duration-ms="1621" started-at="2019-03-19T22:39:09Z" finished-at="2019-03-19T22:39:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at RestApi.APITest.PostTest.SimplePostTest(PostTest.java:66)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SimplePostTest -->
      </class> <!-- RestApi.APITest.PostTest -->
      <class name="RestApi.APITest.GetTest">
        <test-method status="FAIL" signature="DisplayAllNodesInWeatherAPI()[pri:0, instance:RestApi.APITest.GetTest@4501b7af]" name="DisplayAllNodesInWeatherAPI" duration-ms="1239" started-at="2019-03-19T22:39:09Z" finished-at="2019-03-19T22:39:10Z">
          <exception class="io.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:986)
at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:951)
at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1031)
at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
at RestApi.APITest.GetTest.DisplayAllNodesInWeatherAPI(GetTest.java:173)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.IllegalArgumentException: The JSON input text should neither be null nor empty.
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:250)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:80)
at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:949)
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:984)
... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- io.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DisplayAllNodesInWeatherAPI -->
        <test-method status="PASS" signature="GetWeatherDetails()[pri:0, instance:RestApi.APITest.GetTest@4501b7af]" name="GetWeatherDetails" duration-ms="421" started-at="2019-03-19T22:39:10Z" finished-at="2019-03-19T22:39:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetWeatherDetails -->
        <test-method status="FAIL" signature="GetWeatherDetailsInvalidCity()[pri:0, instance:RestApi.APITest.GetTest@4501b7af]" name="GetWeatherDetailsInvalidCity" duration-ms="224" started-at="2019-03-19T22:39:11Z" finished-at="2019-03-19T22:39:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Correct status code returned expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Correct status code returned expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at RestApi.APITest.GetTest.GetWeatherDetailsInvalidCity(GetTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetWeatherDetailsInvalidCity -->
        <test-method status="PASS" signature="GetWeatherHeaders()[pri:0, instance:RestApi.APITest.GetTest@4501b7af]" name="GetWeatherHeaders" duration-ms="224" started-at="2019-03-19T22:39:11Z" finished-at="2019-03-19T22:39:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetWeatherHeaders -->
        <test-method status="PASS" signature="GetWeatherStatusLine()[pri:0, instance:RestApi.APITest.GetTest@4501b7af]" name="GetWeatherStatusLine" duration-ms="242" started-at="2019-03-19T22:39:11Z" finished-at="2019-03-19T22:39:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetWeatherStatusLine -->
        <test-method status="PASS" signature="IteratingOverHeaders()[pri:0, instance:RestApi.APITest.GetTest@4501b7af]" name="IteratingOverHeaders" duration-ms="218" started-at="2019-03-19T22:39:12Z" finished-at="2019-03-19T22:39:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IteratingOverHeaders -->
        <test-method status="PASS" signature="WeatherMessageBody()[pri:0, instance:RestApi.APITest.GetTest@4501b7af]" name="WeatherMessageBody" duration-ms="229" started-at="2019-03-19T22:39:12Z" finished-at="2019-03-19T22:39:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WeatherMessageBody -->
      </class> <!-- RestApi.APITest.GetTest -->
    </test> <!-- APIParallelTests -->
  </suite> <!-- TestSuite -->
</testng-results>
